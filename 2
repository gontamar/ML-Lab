a
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

dataset = pd.read_csv('./ToyotaCorolla.csv')
x = dataset['KM']
y = dataset['Weight']
z = dataset['Price']

plt.tricontourf(x, y, z, levels=20, cmap='jet')
plt.colorbar(label='Price')
plt.xlabel('KM')
plt.ylabel('Weight')
plt.title('Contour Plot')
plt.show()

b
def h(n):
    H = {'A': 11, 'B': 6, 'C': 99, 'E': 7, 'D': 1, 'G': 0}
    return H[n]

def a_star_algorithm(graph, start, goal):
    open_list = [start]
    closed_list = set()
    g = {start: 0}
    parents = {start: start}

    while open_list:
        open_list.sort(key=lambda v: g[v] + h(v), reverse=True)
        n = open_list.pop()

        if n == goal:
            reconst_path = []
            total_cost = g[n]
            while parents[n] != n:
                reconst_path.append(n)
                n = parents[n]
            reconst_path.append(start)
            reconst_path.reverse()

            print(f'Path found: {reconst_path}')
            print(f'Total cost: {total_cost}')
            return reconst_path, total_cost

        for (m, weight) in graph[n]:
            if m not in open_list and m not in closed_list:
                open_list.append(m)
                parents[m] = n
                g[m] = g[n] + weight

            else:
                if g[m] > g[n] + weight:
                    g[m] = g[n] + weight
                    parents[m] = n

                    if m in closed_list:
                        closed_list.remove(m)
                        open_list.append(m)
                        
        closed_list.add(n)

    print('Path does not exist!')
    return None, None

graph = {
    
    'A': [('B', 2), ('E', 3)],
    'B': [('C', 1),('G',9)],
    'E': [('D', 6)],
    'D': [('G', 1)], 
    'C': [],
    'G': []
}
path, cost = a_star_algorithm(graph, 'A', 'G')
